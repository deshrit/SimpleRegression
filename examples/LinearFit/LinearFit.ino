#include <LinearFit.h>

// Dataset1
const size_t TRAIN_SIZE = 80;
const size_t TEST_SIZE = 20;
double xTrain[TRAIN_SIZE] = {
    -0.01764613, -0.09220405, -0.02593034, -0.00936191, -0.04664087,
    -0.09634616, -0.03835666, 0.00306441,  0.01134862,  -0.01350402,
    -0.03421455, -0.05906719, -0.04249877, -0.01350402, -0.07563562,
    -0.04249877, 0.02791705,  -0.0010777,  -0.01764613, -0.05492509,
    0.01549073,  -0.01764613, -0.01350402, 0.13561183,  -0.05492509,
    -0.03421455, -0.0052198,  0.04034337,  -0.05492509, 0.05276969,
    -0.00936191, -0.04249877, 0.02791705,  0.00306441,  -0.06735141,
    0.01963284,  -0.02593034, -0.0052198,  0.02377494,  0.00306441,
    0.09419076,  -0.00936191, -0.03421455, 0.07348023,  -0.01764613,
    -0.05078298, -0.08806194, -0.08391984, -0.02178823, -0.01350402,
    0.00720652,  -0.02178823, -0.01350402, 0.04862759,  0.00720652,
    0.00720652,  -0.01764613, -0.06735141, -0.05078298, 0.01963284,
    -0.03421455, 0.01963284,  -0.02593034, -0.07149352, 0.01134862,
    0.01549073,  0.01963284,  0.00306441,  0.00306441,  0.01963284,
    0.04034337,  0.06105391,  -0.01764613, -0.00936191, 0.07348023,
    0.02791705,  0.01549073,  -0.0010777,  -0.08391984, -0.02593034};
double yTrain[TRAIN_SIZE] = {
    151., 75.,  141., 206., 135., 97.,  138., 63.,  110., 310., 101., 69.,
    179., 185., 118., 171., 166., 144., 97.,  168., 68.,  49.,  68.,  245.,
    184., 202., 137., 85.,  131., 283., 129., 59.,  341., 87.,  65.,  102.,
    265., 276., 252., 90.,  100., 55.,  61.,  92.,  259., 53.,  190., 142.,
    75.,  142., 155., 225., 59.,  104., 182., 128., 52.,  37.,  170., 170.,
    61.,  144., 52.,  128., 71.,  163., 150., 97.,  160., 178., 48.,  270.,
    202., 111., 85.,  42.,  170., 200., 252., 113.};
double xTest[TEST_SIZE] = {-0.0052198,  -0.0010777,  -0.07977773, -0.04249877,
                           -0.12948301, -0.07149352, -0.03421455, -0.03835666,
                           0.06933812,  0.01963284,  0.01134862,  0.01963284,
                           0.01134862,  -0.05492509, -0.09220405, -0.0052198,
                           0.03205916,  0.07762233,  -0.06735141, -0.05492509};
double yTest[TEST_SIZE] = {143., 51.,  52.,  210., 65.,  141., 55.,
                           134., 42.,  111., 98.,  164., 48.,  96.,
                           90.,  162., 150., 279., 92.,  83.};

// Dataset2
const size_t TRAIN_SIZE2 = 32;
const size_t TEST_SIZE2 = 8;
int8_t xTrain2[TRAIN_SIZE2] = {
    -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5,
    -4,  -3,  -2,  -1,  0,   1,   2,   3,   4,   5,   6,   7,  8,  9,  10, 11};
float yTrain2[TRAIN_SIZE2] = {
    -64.78006829, -55.29267694, -58.93280845, -48.81389092, -50.11588811,
    -45.88256137, -41.34092144, -40.81582012, -40.03199498, -38.12278771,
    -36.19258731, -26.61559704, -26.58690777, -26.41690132, -16.20062969,
    -19.25913538, -14.85764981, -13.03920067, -6.71212091,  -4.2016219,
    -1.00070803,  -1.34180882,  1.84685881,   4.53588206,   8.27563948,
    9.44164301,   12.65612861,  23.63930529,  26.60226715,  21.88414656,
    23.24306562,  28.04555546};
int8_t xTest2[TEST_SIZE2] = {12, 13, 14, 15, 16, 17, 18, 19};
float yTest2[TEST_SIZE2] = {35.99843614, 39.79514586, 35.22933092, 43.77662858,
                            41.01642173, 49.15472612, 53.39795176, 59.85624403};

void setup() {
  Serial.begin(9600);

  // For Dataset1

  // Model
  LinearFit<double, double> lf;
  lf.fit(xTrain, yTrain, TRAIN_SIZE);

  // Coefficients
  Serial.print("Slope: ");
  Serial.print(lf.slope());
  Serial.print("\tIntercept: ");
  Serial.print(lf.intercept());

  // Predict
  Serial.print("\nPrediction of -0.0052198: ");
  Serial.print(lf.predict(-0.0052198));

  // Predict many
  double yPred[TEST_SIZE] = {0.0};
  lf.predictMany(xTest, yPred, TEST_SIZE);

  // Evaluate
  Serial.print("\nMSE: ");
  Serial.print(lf.MSE(yTest, yPred, TEST_SIZE));
  Serial.print("\tR2Score: ");
  Serial.print(lf.R2Score(yTest, yPred, TEST_SIZE));

  Serial.print("\n\n");

  // For Dataset2

  // Model
  LinearFit<int8_t, float> lf2(xTrain2, yTrain2, TRAIN_SIZE2);

  // Coefficients
  Serial.print("Slope: ");
  Serial.print(lf2.slope());
  Serial.print("\tIntercept: ");
  Serial.print(lf2.intercept());

  // Predict
  Serial.print("\nPrediction of 12: ");
  Serial.print(lf2.predict(12));

  // Predict many
  float yPred2[TEST_SIZE2] = {0.0};
  lf2.predictMany(xTest2, yPred2, TEST_SIZE2);

  // Evaluate
  Serial.print("\nMSE: ");
  Serial.print(lf2.MSE(yTest2, yPred2, TEST_SIZE2));
  Serial.print("\tR2Score: ");
  Serial.print(lf2.R2Score(yTest2, yPred2, TEST_SIZE2));
}

void loop() {}
